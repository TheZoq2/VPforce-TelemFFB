name: Package Application with Pyinstaller

on: 
  push:
    tags:
    - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Package Application
      uses: walmis/pyinstaller-action-windows@main
      with:
        path: .
       
    - name: Make Zip
      id: zip
      run: |
        cd dist/windows/VPforce-TelemFFB && zip -r ../../../VPforce-TelemFFB .
        echo "::set-output name=tag_name::$(git tag --sort version:refname | tail -n 1)"
     
    - name: Extract latest release notes
      run: |
        pattern='(?s)############################################\n##.*?\n############################################\n((.|\n)*?)\n############################################\n'
        python -c "import re; print(re.search('$pattern', open('_RELEASE_NOTES.txt').read()).groups()[0])" > latest_release_notes.txt

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: latest_release_notes.txt
        draft: true
        prerelease: false
        
    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path:  VPforce-TelemFFB.zip
        asset_name: VPforce-TelemFFB-${{ steps.zip.outputs.tag_name }}.zip
        asset_content_type: application/zip
